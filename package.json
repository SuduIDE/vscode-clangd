{
    "name": "sudu-vscode-clangd",
    "displayName": "sudu.clangd",
    "description": "C/C++ completion, navigation, and insights",
    "version": "0.0.1-rc.0",
    "publisher": "llvm-vs-code-extensions",
    "license": "MIT",
    "homepage": "https://clangd.llvm.org/",
    "icon": "icon.png",
    "engines": {
        "vscode": "^1.65.0"
    },
    "categories": [
        "Programming Languages",
        "Linters",
        "Formatters"
    ],
    "keywords": [
        "C",
        "C++",
        "clang",
        "clangd",
        "LLVM"
    ],
    "activationEvents": [
        "onFileSystem:sudu"
    ],
    "main": "./out/bundle",
    "scripts": {
        "esbuild": "esbuild ./src/extension.ts --bundle --outfile=out/bundle.js --external:vscode --format=cjs --platform=node",
        "vscode:prepublish": "npm run check-ts && npm run esbuild -- --minify --keep-names",
        "compile": "npm run esbuild -- --sourcemap",
        "check-ts": "tsc -noEmit -p ./",
        "format": "clang-format -i --glob=\"{src,test}/*.ts\"",
        "test": "tsc -p ./ && node ./out/test/index.js",
        "package": "vsce package --baseImagesUrl https://raw.githubusercontent.com/clangd/vscode-clangd/master/",
        "publish": "vsce publish --baseImagesUrl https://raw.githubusercontent.com/clangd/vscode-clangd/master/",
        "publish-openvsx": "ovsx publish --baseImagesUrl https://raw.githubusercontent.com/clangd/vscode-clangd/master/",
        "git-clang-format": "git-clang-format --extensions=ts"
    },
    "dependencies": {
        "@clangd/install": "0.1.16",
        "abort-controller": "^3.0.0",
        "vscode-languageclient": "8.0.2"
    },
    "devDependencies": {
        "@types/glob": "^7.1.1",
        "@types/mocha": "^7.0.2",
        "@types/node": "^6.0.40",
        "@types/vscode": "1.65.0",
        "clang-format": "^1.7.0",
        "esbuild": "^0.14.13",
        "glob": "^7.1.4",
        "mocha": "^9.2.0",
        "ovsx": "^0.3.0",
        "typescript": "^4.5.5",
        "vsce": "^2.7.0",
        "vscode-test": "^1.3.0"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/clangd/vscode-clangd.git"
    },
    "qna": "marketplace",
    "capabilities": {
        "untrustedWorkspaces": {
            "supported": "limited",
            "description": "In restricted mode clangd.path and clangd.arguments are not respected.",
            "restrictedConfigurations": ["sudu.clangd.path", "sudu.clangd.arguments"]
        }
    },
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "clangd",
            "properties": {
                "sudu.clangd.path": {
                    "type": "string",
                    "default": "clangd",
                    "scope": "machine-overridable",
                    "description": "The path to clangd executable, e.g.: /usr/bin/clangd."
                },
                "sudu.clangd.arguments": {
                    "type": "array",
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "description": "Arguments for clangd server."
                },
                "sudu.clangd.trace": {
                    "type": "string",
                    "description": "Names a file that clangd should log a performance trace to, in chrome trace-viewer JSON format."
                },
                "sudu.clangd.semanticHighlighting": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable semantic highlighting in clangd.",
                    "deprecationMessage": "Legacy semanticHighlights is no longer supported. Please use `editor.semanticHighlighting.enabled` instead."
                },
                "sudu.clangd.fallbackFlags": {
                    "type": "array",
                    "default": [],
                    "items": {
                        "type": "string"
                    },
                    "description": "Extra clang flags used to parse files when no compilation database is found."
                },
                "sudu.clangd.serverCompletionRanking": {
                    "type": "boolean",
                    "default": true,
                    "description": "Always rank completion items on the server as you type. This produces more accurate results at the cost of higher latency than client-side filtering."
                },
                "sudu.clangd.restartAfterCrash": {
                    "type": "boolean",
                    "default": true,
                    "description": "Auto restart clangd (up to 4 times) if it crashes."
                },
                "sudu.clangd.checkUpdates": {
                    "type": "boolean",
                    "default": false,
                    "description": "Check for language server updates on startup."
                },
                "sudu.clangd.onConfigChanged": {
                    "type": "string",
                    "default": "prompt",
                    "description": "What to do when clangd configuration files are changed. Ignored for clangd 12+, which can reload such files itself.",
                    "enum": [
                        "prompt",
                        "restart",
                        "ignore"
                    ],
                    "enumDescriptions": [
                        "Prompt the user for restarting the server",
                        "Automatically restart the server",
                        "Do nothing"
                    ]
                },
                "sudu.clangd.detectExtensionConflicts": {
                    "type": "boolean",
                    "default": true,
                    "description": "Warn about conflicting extensions and suggest disabling them."
                }
            }
        },
        "commands": [
            {
                "command": "sudu.clangd.switchheadersource",
                "category": "clangd",
                "title": "Switch Between Source/Header"
            },
            {
                "command": "sudu.clangd.install",
                "category": "sudu.clangd",
                "title": "Download language server"
            },
            {
                "command": "sudu.clangd.update",
                "category": "clangd",
                "title": "Check for language server update"
            },
            {
                "command": "sudu.clangd.activate",
                "category": "clangd",
                "title": "Manually activate extension"
            },
            {
                "command": "sudu.clangd.restart",
                "category": "clangd",
                "title": "Restart language server"
            },
            {
                "command": "sudu.clangd.typeHierarchy",
                "category": "clangd",
                "title": "Open Type Hierarchy"
            },
            {
                "command": "sudu.clangd.typeHierarchy.viewParents",
                "category": "clangd",
                "title": "Types: Show Base Classes",
                "icon": "$(triangle-up)"
            },
            {
                "command": "sudu.clangd.typeHierarchy.viewChildren",
                "category": "clangd",
                "title": "Types: Show Derived Classes",
                "icon": "$(triangle-down)"
            },
            {
                "command": "sudu.clangd.typeHierarchy.close",
                "category": "clangd",
                "title": "Close",
                "icon": "$(panel-close)"
            },
            {
                "command": "sudu.clangd.memoryUsage",
                "category": "clangd",
                "title": "Show memory usage",
                "enablement": "sudu.clangd.memoryUsage.supported",
                "icon": "$(refresh)"
            },
            {
                "command": "sudu.clangd.memoryUsage.close",
                "category": "clangd",
                "title": "Close",
                "icon": "$(panel-close)"
            },
            {
                "command": "sudu.clangd.ast",
                "category": "clangd",
                "title": "Show AST",
                "enablement": "sudu.clangd.ast.supported",
                "icon": "$(list-tree)"
            },
            {
                "command": "sudu.clangd.ast.close",
                "category": "clangd",
                "title": "Close",
                "icon": "$(panel-close)"
            },
            {
                "command": "sudu.clangd.projectConfig",
                "category": "clangd",
                "title": "Open project configuration file",
                "icon": "$(gear)"
            },
            {
                "command": "sudu.clangd.userConfig",
                "category": "clangd",
                "title": "Open user configuration file",
                "icon": "$(gear)"
            },
            {
                "command": "sudu.clangd.inlayHints.toggle",
                "category": "clangd",
                "title": "Toggle inlay hints",
                "enablement": "sudu.clangd.inlayHints.supported"
            },
            {
                "command": "sudu.clangd.referencesInAllProfiles",
                "category": "clangd",
                "title": "Find All References in All Profiles"
            }
        ],
        "keybindings": [
            {
                "command": "sudu.clangd.switchheadersource",
                "key": "Alt+o",
                "mac": "Alt+cmd+o",
                "when": "editorTextFocus"
            },
            {
                "command": "sudu.clangd.typeHierarchy",
                "key": "Shift+Alt+t",
                "when": "editorTextFocus"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "command": "sudu.clangd.typeHierarchy",
                    "when": "resourceLangId == cpp && clangd.enableTypeHierarchy",
                    "group": "0_navigation@4",
                    "_comment": "see https://github.com/microsoft/vscode-references-view/blob/f63eaed9934ca5ecc8f3fb3ca096f38c6e5e181f/package.json#L162"
                },
                {
                    "command": "sudu.clangd.switchheadersource",
                    "when": "resourceLangId == c || resourceLangId == cpp || resourceLangId == cuda-cpp || resourceLangId == objective-c || resourceLangId == objective-cpp",
                    "group": "0_navigation@5"
                },
                {
                    "command": "sudu.clangd.ast",
                    "when": "sudu.clangd.ast.supported"
                },
                {
                    "command": "sudu.clangd.referencesInAllProfiles",
                    "when": "resourceLangId == cpp && editorHasReferenceProvider",
                    "group": "0_navigation@1"
                }
            ],
            "view/title": [
                {
                    "command": "sudu.clangd.typeHierarchy.viewParents",
                    "when": "view == clangd.typeHierarchyView",
                    "group": "navigation"
                },
                {
                    "command": "sudu.clangd.typeHierarchy.viewChildren",
                    "when": "view == clangd.typeHierarchyView",
                    "group": "navigation"
                },
                {
                    "command": "sudu.clangd.typeHierarchy.close",
                    "when": "view == clangd.typeHierarchyView",
                    "group": "navigation"
                },
                {
                    "command": "sudu.clangd.memoryUsage.close",
                    "when": "view == clangd.memoryUsage",
                    "group": "navigation"
                },
                {
                    "command": "sudu.clangd.memoryUsage",
                    "when": "view == clangd.memoryUsage",
                    "group": "navigation"
                },
                {
                    "command": "sudu.clangd.ast.close",
                    "when": "view == clangd.ast",
                    "group": "navigation"
                }
            ],
            "commandPalette": [
                {
                    "command": "sudu.clangd.typeHierarchy.viewParents",
                    "when": "resourceLangId == cpp"
                },
                {
                    "command": "sudu.clangd.typeHierarchy.viewChildren",
                    "when": "resourceLangId == cpp"
                },
                {
                    "command": "sudu.clangd.memoryUsage",
                    "when": "sudu.clangd.memoryUsage.supported"
                }
            ]
        },
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "references-in-profiles-view",
                    "icon": "$(references)",
                    "title": "References in profiles"
                }
            ]
        },
        "views": {
            "explorer": [
                {
                    "id": "sudu.clangd.typeHierarchyView",
                    "name": "Type Hierarchy",
                    "when": "sudu.clangd.typeHierarchyVisible"
                },
                {
                    "id": "sudu.clangd.memoryUsage",
                    "name": "clangd Memory Usage",
                    "when": "sudu.clangd.memoryUsage.hasData"
                },
                {
                    "id": "sudu.clangd.ast",
                    "name": "AST",
                    "when": "sudu.clangd.ast.hasData"
                }
            ],
            "references-in-profiles-view": [
                {
                    "id": "references-in-profiles.tree",
                    "name": "References in All Profiles",
                    "when": "references-in-profiles.isActive"
                }
            ]
        }
    },
    "extensionDependencies": ["sudu.dvfs"]
}
